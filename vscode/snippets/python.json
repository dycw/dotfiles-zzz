// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
// same ids are connected.
// Example:
// "Print to console": {
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }
{
  // standard library - collections
  "fco-callable": {
    "prefix": "fco-callable",
    "body": ["from collections.abc import Callable", "$0"]
  },
  "fco-iterable": {
    "prefix": "fco-iterable",
    "body": ["from collections.abc import Iterable", "$0"]
  },
  "fco-iterator": {
    "prefix": "fco-iterator",
    "body": ["from collections.abc import Iterator", "$0"]
  },
  "fco-mapping": {
    "prefix": "fco-mapping",
    "body": ["from collections.abc import Mapping", "$0"]
  },
  "fco-set": {
    "prefix": "fco-set",
    "body": ["from collections.abc import Set", "$0"]
  },

  // standard library - csv
  "fcs-reader": {
    "prefix": "fcs-reader",
    "body": ["from csv import reader", "$0"]
  },
  "fcs-writer": {
    "prefix": "fcs-writer",
    "body": ["from csv import writer", "$0"]
  },

  // standard library - dataclasses
  "fda-dataclasses": {
    "prefix": "fda-dataclasses",
    "body": ["from dataclasses import dataclass", "$0"]
  },
  "fda-field": {
    "prefix": "fda-field",
    "body": ["from dataclasses import field", "$0"]
  },

  // standard library - datetime
  "im-dt": {
    "prefix": "im-dt",
    "body": ["import datetime as dt", "$0"]
  },

  // standard library - enum
  "fen-auto": {
    "prefix": "fen-auto",
    "body": ["from enum import auto", "$0"]
  },
  "fen-enum": {
    "prefix": "fen-enum",
    "body": ["from enum import Enum", "$0"]
  },
  "fen-enum-and-auto": {
    "prefix": "fen-enum-and-auto",
    "body": ["from enum import Enum, auto", "$0"]
  },

  // standard library - functools
  "ffu-cache": {
    "prefix": "ffu-cache",
    "body": ["from functools import cache", "$0"]
  },
  "ffu-cached-property": {
    "prefix": "ffu-cached-property",
    "body": ["from functools import cached_property", "$0"]
  },
  "ffu-partial": {
    "prefix": "ffu-partial",
    "body": ["from functools import partial", "$0"]
  },
  "ffu-lru-cache": {
    "prefix": "ffu-lru-cache",
    "body": ["from functools import lru_cache", "$0"]
  },
  "ffu-reduce": {
    "prefix": "ffu-reduce",
    "body": ["from functools import reduce", "$0"]
  },

  // standard library - future
  "ffu-annotations": {
    "prefix": "ffu-annotations",
    "body": ["from __future__ import annotations", "$0"]
  },

  // standard library - itertools
  "fit-chain": {
    "prefix": "fit-chain",
    "body": ["from itertools import chain", "$0"]
  },

  // standard library - operator
  "fop-eq": {
    "prefix": "fop-eq",
    "body": ["from operator import eq", "$0"]
  },

  // standard library - pathlib
  "fpa-path": {
    "prefix": "fpa-path",
    "body": ["from pathlib import Path", "$0"]
  },

  // standard library - shutil
  "fsh-copyfile": {
    "prefix": "fsh-copyfile",
    "body": ["from shutil import copyfile", "$0"]
  },
  "fsh-copytree": {
    "prefix": "fsh-copytree",
    "body": ["from shutil import copytree", "$0"]
  },

  // standard library - subprocess
  "fsu-called-process-error": {
    "prefix": "fsu-called-process-error",
    "body": ["from subprocess import CalledProcessError", "$0"]
  },
  "fsu-check-call": {
    "prefix": "fsu-check-call",
    "body": ["from subprocess import check_call", "$0"]
  },
  "fsu-check-output": {
    "prefix": "fsu-check-output",
    "body": ["from subprocess import check_output", "$0"]
  },
  "fsu-devnull": {
    "prefix": "fsu-devnull",
    "body": ["from subprocess import DEVNULL", "$0"]
  },
  "fsu-pipe": {
    "prefix": "fsu-pipe",
    "body": ["from subprocess import PIPE", "$0"]
  },
  "fsu-run": {
    "prefix": "fsu-run",
    "body": ["from subprocess import run", "$0"]
  },
  "fsu-stdout": {
    "prefix": "fsu-stdout",
    "body": ["from subprocess import STDOUT", "$0"]
  },

  // standard library - subprocess
  "fsy-argv": {
    "prefix": "fsy-argv",
    "body": ["from sys import argv", "$0"]
  },
  "fsy-stderr": {
    "prefix": "fsy-stderr",
    "body": ["from sys import stderr", "$0"]
  },
  "fsy-stdout": {
    "prefix": "fsy-stdout",
    "body": ["from sys import stdout", "$0"]
  },

  // standard library - time
  "fti-slee": {
    "prefix": "fti-slee",
    "body": ["from time import sleep", "$0"]
  },

  // standard library - typing
  "fty-any": {
    "prefix": "fty-any",
    "body": ["from typing import Any", "$0"]
  },
  "fty-callable": {
    "prefix": "fty-callable",
    "body": ["from typing import Callable", "$0"]
  },
  "fty-cast": {
    "prefix": "fty-cast",
    "body": ["from typing import cast", "$0"]
  },
  "fty-iterable": {
    "prefix": "fty-iterable",
    "body": ["from typing import Iterable", "$0"]
  },
  "fty-iterator": {
    "prefix": "fty-iterator",
    "body": ["from typing import Iterator", "$0"]
  },
  "fty-mapping": {
    "prefix": "fty-mapping",
    "body": ["from typing import Mapping", "$0"]
  },
  "fty-overload": {
    "prefix": "fty-overload",
    "body": ["from typing import overload", "$0"]
  },
  "fty-sequence": {
    "prefix": "fty-sequence",
    "body": ["from typing import Sequence", "$0"]
  },
  "fty-union": {
    "prefix": "fty-union",
    "body": ["from typing import Union", "$0"]
  },

  // third party - beartype
  "fbe-beartype": {
    "prefix": "fbe-beartype",
    "body": ["from beartype import beartype", "$0"]
  },

  // third party - bidict
  "fbi-bidict": {
    "prefix": "fbi-bidict",
    "body": ["from bidict import bidict", "$0"]
  },

  // third party - cvxpy
  "fcv-constraint": {
    "prefix": "fcv-constraint",
    "body": ["from cvxpy import Constraint", "$0"]
  },
  "fcv-expression": {
    "prefix": "fcv-expression",
    "body": ["from cvxpy import Expression", "$0"]
  },
  "fcv-maximize": {
    "prefix": "fcv-maximize",
    "body": ["from cvxpy import Maximize", "$0"]
  },
  "fcv-minimize": {
    "prefix": "fcv-minimize",
    "body": ["from cvxpy import Minimize", "$0"]
  },
  "fcv-multiply": {
    "prefix": "fcv-multiply",
    "body": ["from cvxpy import multiply", "$0"]
  },
  "fcv-norm": {
    "prefix": "fcv-norm",
    "body": ["from cvxpy import norm", "$0"]
  },
  "fcv-problem": {
    "prefix": "fcv-problem",
    "body": ["from cvxpy import Problem", "$0"]
  },
  "fcv-scalar-product": {
    "prefix": "fcv-scalar-product",
    "body": ["from cvxpy import scalar_product", "$0"]
  },
  "fcv-variable": {
    "prefix": "fcv-variable",
    "body": ["from cvxpy import Variable", "$0"]
  },

  // third party - fastapi
  "ffa-fastapi": {
    "prefix": "ffa-fastapi",
    "body": ["from fastapi import FastAPI", "$0"]
  },

  // third party - hypothesis
  "fhy-booleans": {
    "prefix": "fhy-booleans",
    "body": ["from hypothesis.strategies import booleans", "$0"]
  },
  "fhy-data": {
    "prefix": "fhy-data",
    "body": ["from hypothesis.strategies import data", "$0"]
  },
  "fhy-data-object": {
    "prefix": "fhy-data-object",
    "body": ["from hypothesis.strategies import DataObject", "$0"]
  },
  "fhy-dates": {
    "prefix": "fhy-dates",
    "body": ["from hypothesis.strategies import dates", "$0"]
  },
  "fhy-datetimes": {
    "prefix": "fhy-datetimes",
    "body": ["from hypothesis.strategies import datetimes", "$0"]
  },
  "fhy-fixed-dictionaries": {
    "prefix": "fhy-fixed-dictionaries",
    "body": ["from hypothesis.strategies import fixed_dictionaries", "$0"]
  },
  "fhy-floats": {
    "prefix": "fhy-floats",
    "body": ["from hypothesis.strategies import floats", "$0"]
  },
  "fhy-integers": {
    "prefix": "fhy-integers",
    "body": ["from hypothesis.strategies import integers", "$0"]
  },
  "fhy-just": {
    "prefix": "fhy-just",
    "body": ["from hypothesis.strategies import just", "$0"]
  },
  "fhy-lists": {
    "prefix": "fhy-lists",
    "body": ["from hypothesis.strategies import lists", "$0"]
  },
  "fhy-none": {
    "prefix": "fhy-none",
    "body": ["from hypothesis.strategies import none", "$0"]
  },
  "fhy-reproduce-failure": {
    "prefix": "fhy-reproduce-failure",
    "body": ["from hypothesis import reproduce_failure", "$0"]
  },
  "fhy-sampled-from": {
    "prefix": "fhy-sampled-from",
    "body": ["from hypothesis.strategies import sampled_from", "$0"]
  },
  "fhy-search-strategy": {
    "prefix": "fhy-search-strategy",
    "body": ["from hypothesis.strategies import SearchStrategy", "$0"]
  },
  "fhy-sets": {
    "prefix": "fhy-sets",
    "body": ["from hypothesis.strategies import sets", "$0"]
  },
  "fhy-tuples": {
    "prefix": "fhy-tuples",
    "body": ["from hypothesis.strategies import tuples", "$0"]
  },

  // third party - loguru
  "flo-logger": {
    "prefix": "flo-logger",
    "body": ["from loguru import logger", "$0"]
  },

  // third party - numpy
  "fnu-block": {
    "prefix": "fnu-block",
    "body": ["from numpy import block", "$0"]
  },
  "fnu-cholesky": {
    "prefix": "fnu-cholesky",
    "body": ["from numpy.linalg import cholesky", "$0"]
  },
  "fnu-diag": {
    "prefix": "fnu-diag",
    "body": ["from numpy import diag", "$0"]
  },
  "fnu-eye": {
    "prefix": "fnu-eye",
    "body": ["from numpy import eye", "$0"]
  },
  "fnu-isclose": {
    "prefix": "fnu-isclose",
    "body": ["from numpy import isclose", "$0"]
  },
  "fnu-sqrt": {
    "prefix": "fnu-sqrt",
    "body": ["from numpy import sqrt", "$0"]
  },
  "fnu-vstack": {
    "prefix": "fnu-vstack",
    "body": ["from numpy import vstack", "$0"]
  },
  "fnu-zeros": {
    "prefix": "fnu-zeros",
    "body": ["from numpy import zeros", "$0"]
  },
  "fnu-zeros-like": {
    "prefix": "fnu-zeros-like",
    "body": ["from numpy import zeros_like", "$0"]
  },

  // third party - pandas
  "fpa-assert-frame-equal": {
    "prefix": "fpa-assert-frame-equal",
    "body": ["from pandas.testing import assert_frame_equal ", "$0"]
  },
  "fpa-assert-index-equal": {
    "prefix": "fpa-assert-index-equal",
    "body": ["from pandas.testing import assert_index_equal ", "$0"]
  },
  "fpa-assert-series-equal": {
    "prefix": "fpa-assert-series-equal",
    "body": ["from pandas.testing import assert_series_equal ", "$0"]
  },
  "fpa-bday": {
    "prefix": "fpa-bday",
    "body": ["from pandas.tseries.offsets import BDay", "$0"]
  },
  "fpa-dataframe": {
    "prefix": "fpa-dataframe",
    "body": ["from pandas import DataFrame", "$0"]
  },
  "fpa-series": {
    "prefix": "fpa-series",
    "body": ["from pandas import Series", "$0"]
  },
  "fpa-timedelta": {
    "prefix": "fpa-timedelta",
    "body": ["from pandas import Timedelta", "$0"]
  },
  "fpa-timestamp": {
    "prefix": "fpa-timestamp",
    "body": ["from pandas import Timestamp", "$0"]
  },

  // third party - polars
  "fpo-assert-frame-equal": {
    "prefix": "fpo-assert-frame-equal",
    "body": ["from polars.testing import assert_frame_equal ", "$0"]
  },
  "fpo-assert-series-equal": {
    "prefix": "fpo-assert-series-equal",
    "body": ["from polars.testing import assert_series_equal ", "$0"]
  },
  "fpo-boolean": {
    "prefix": "fpo-boolean",
    "body": ["from polars import Boolean", "$0"]
  },
  "fpo-col": {
    "prefix": "fpo-col",
    "body": ["from polars import col", "$0"]
  },
  "fpo-data-type-class": {
    "prefix": "fpo-data-type-class",
    "body": ["from polars.datatypes import DataTypeClass", "$0"]
  },
  "fpo-dataframe": {
    "prefix": "fpo-dataframe",
    "body": ["from polars import DataFrame", "$0"]
  },
  "fpo-date": {
    "prefix": "fpo-date",
    "body": ["from polars import Date", "$0"]
  },
  "fpo-datetime": {
    "prefix": "fpo-datetime",
    "body": ["from polars import Datetime", "$0"]
  },
  "fpo-float64": {
    "prefix": "fpo-float64",
    "body": ["from polars import Float64", "$0"]
  },
  "fpo-int64": {
    "prefix": "fpo-int64",
    "body": ["from polars import Int64", "$0"]
  },
  "fpo-into-expr": {
    "prefix": "fpo-into-expr",
    "body": ["from polars.type_aliases import IntoExpr", "$0"]
  },
  "fpo-into-expr-column": {
    "prefix": "fpo-into-expr-column",
    "body": ["from polars.type_aliases import IntoExprColumn", "$0"]
  },
  "fpo-lit": {
    "prefix": "fpo-lit",
    "body": ["from polars import lit", "$0"]
  },
  "fpo-polars-data-type": {
    "prefix": "fpo-polars-data-type",
    "body": ["from polars import PolarsDataType", "$0"]
  },
  "fpo-read-csv": {
    "prefix": "fpo-read-csv",
    "body": ["from polars import read_csv", "$0"]
  },
  "fpo-read-excel": {
    "prefix": "fpo-read-excel",
    "body": ["from polars import read_excel", "$0"]
  },
  "fpo-schema-dict": {
    "prefix": "fpo-schema-dict",
    "body": ["from polars.type_aliases import SchemaDict", "$0"]
  },
  "fpo-series": {
    "prefix": "fpo-series",
    "body": ["from polars import Series", "$0"]
  },
  "fpo-utf8": {
    "prefix": "fpo-utf8",
    "body": ["from polars import Utf8", "$0"]
  },
  "fpo-when": {
    "prefix": "fpo-when",
    "body": ["from polars import when", "$0"]
  },

  // third party - pytest
  "fpy-fixture": {
    "prefix": "fpy-fixture",
    "body": ["from pytest import fixture", "$0"]
  },
  "fpy-mark": {
    "prefix": "fpy-mark",
    "body": ["from pytest import mark", "$0"]
  },
  "fpy-mark-and-param": {
    "prefix": "fpy-mark-and-param",
    "body": ["from pytest import mark, param", "$0"]
  },
  "fpy-param": {
    "prefix": "fpy-param",
    "body": ["from pytest import param", "$0"]
  },
  "fpy-raises": {
    "prefix": "fpy-raises",
    "body": ["from pytest import raises", "$0"]
  },

  // third party - sqlalchemy
  "fsq-and": {
    "prefix": "fsq-and",
    "body": ["from sqlalchemy import and_", "$0"]
  },
  "fsq-column": {
    "prefix": "fsq-column",
    "body": ["from sqlalchemy import Column", "$0"]
  },
  "fsq-connection": {
    "prefix": "fsq-connection",
    "body": ["from sqlalchemy import Connection", "$0"]
  },
  "fsq-date": {
    "prefix": "fsq-date",
    "body": ["from sqlalchemy import Date", "$0"]
  },
  "fsq-engine": {
    "prefix": "fsq-engine",
    "body": ["from sqlalchemy import Engine", "$0"]
  },
  "fsq-func": {
    "prefix": "fsq-func",
    "body": ["from sqlalchemy import func", "$0"]
  },
  "fsq-or": {
    "prefix": "fsq-or",
    "body": ["from sqlalchemy import or_", "$0"]
  },
  "fsq-select": {
    "prefix": "fsq-select",
    "body": ["from sqlalchemy import select", "$0"]
  },
  "fsq-table": {
    "prefix": "fsq-table",
    "body": ["from sqlalchemy import Table", "$0"]
  },

  // third party - streamlit
  "fst-bar-chart": {
    "prefix": "fst-bar-chart",
    "body": ["from streamlit import bar_chart", "$0"]
  },
  "fst-cache-data": {
    "prefix": "fst-cache-data",
    "body": ["from streamlit import cache_data", "$0"]
  },
  "fst-checkbox": {
    "prefix": "fst-checkbox",
    "body": ["from streamlit import checkbox", "$0"]
  },
  "fst-columns": {
    "prefix": "fst-columns",
    "body": ["from streamlit import columns", "$0"]
  },
  "fst-container": {
    "prefix": "fst-container",
    "body": ["from streamlit import container", "$0"]
  },
  "fst-dataframe": {
    "prefix": "fst-dataframe",
    "body": ["from streamlit import dataframe", "$0"]
  },
  "fst-empty": {
    "prefix": "fst-empty",
    "body": ["from streamlit import empty", "$0"]
  },
  "fst-error": {
    "prefix": "fst-error",
    "body": ["from streamlit import error", "$0"]
  },
  "fst-form": {
    "prefix": "fst-form",
    "body": ["from streamlit import form", "$0"]
  },
  "fst-form-submit-button": {
    "prefix": "fst-form-submit-button",
    "body": ["from streamlit import form_submit_button", "$0"]
  },
  "fst-header": {
    "prefix": "fst-header",
    "body": ["from streamlit import header", "$0"]
  },
  "fst-markdown": {
    "prefix": "fst-markdown",
    "body": ["from streamlit import markdown", "$0"]
  },
  "fst-map": {
    "prefix": "fst-map",
    "body": ["from streamlit import map", "$0"]
  },
  "fst-progress": {
    "prefix": "fst-progress",
    "body": ["from streamlit import progress", "$0"]
  },
  "fst-secrets": {
    "prefix": "fst-secrets",
    "body": ["from streamlit import secrets", "$0"]
  },
  "fst-session-state": {
    "prefix": "fst-session-state",
    "body": ["from streamlit import session-state", "$0"]
  },
  "fst-subheader": {
    "prefix": "fst-subheader",
    "body": ["from streamlit import subheader", "$0"]
  },
  "fst-text": {
    "prefix": "fst-text",
    "body": ["from streamlit import text", "$0"]
  },
  "fst-text-input": {
    "prefix": "fst-text-input",
    "body": ["from streamlit import text_input", "$0"]
  },
  "fst-title": {
    "prefix": "fst-title",
    "body": ["from streamlit import title", "$0"]
  },
  "fst-write": {
    "prefix": "fst-write",
    "body": ["from streamlit import write", "$0"]
  },

  // third party - typed-settings
  "fty-settings": {
    "prefix": "fty-settings",
    "body": ["from typed_settings import settings", "$0"]
  },

  // third party - (dycw-)utilities
  "fut-add-weekdays": {
    "prefix": "fut-add-weekdays",
    "body": ["from utilities.datetime import add_weekdays", "$0"]
  },
  "fut-ensure-str": {
    "prefix": "fut-ensure-str",
    "body": ["from utilities.text import ensure_str", "$0"]
  },
  "fut-extract-group": {
    "prefix": "fut-extract-group",
    "body": ["from utilities.re import extract_group", "$0"]
  },
  "fut-get-repo-root": {
    "prefix": "fut-get-repo-root",
    "body": ["from utilities.git import get_repo_root", "$0"]
  },
  "fut-hong-kong": {
    "prefix": "fut-hong-kong",
    "body": ["from utilities.zoneinfo import HONG_KONG", "$0"]
  },
  "fut-snake-case": {
    "prefix": "fut-snake-case",
    "body": ["from utilities.text import snake_case", "$0"]
  }
}
