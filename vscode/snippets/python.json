// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
// same ids are connected.
// Example:
// "Print to console": {
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }
{
  // standard library - abc
  "iaabc": {
    "prefix": "iaabc",
    "body": ["from abc import ABC", "$0"],
    "description": "from abc import ABC"
  },
  "iaabcmeta": {
    "prefix": "iaabcmeta",
    "body": ["from abc import ABCMeta", "$0"],
    "description": "from abc import ABCMeta"
  },
  "iaabstractmethod": {
    "prefix": "iaabstractmethod",
    "body": ["from abc import abstractmethod", "$0"],
    "description": "from abc import abstractmethod"
  },

  // standard library - argparse
  "iaargumentparse": {
    "prefix": "iaargumentparse",
    "body": ["from argparse import ArgumentParser", "$0"],
    "description": "from argparse import ArgumentParser"
  },

  // standard library - collections
  "iccounter": {
    "prefix": "iccounter",
    "body": ["from collections import Counter", "$0"],
    "description": "from collections import Counter"
  },
  "icdefaultdict": {
    "prefix": "icdefaultdict",
    "body": ["from collections import defaultdict", "$0"],
    "description": "from collections import defaultdict"
  },
  "icdeque": {
    "prefix": "icdeque",
    "body": ["from collections import deque", "$0"],
    "description": "from collections import deque"
  },
  "icaawaitable": {
    "prefix": "icaawaitable",
    "body": ["from collections.abc import Awaitable", "$0"],
    "description": "from collections.abc import Awaitable"
  },
  "icacallable": {
    "prefix": "icacallable",
    "body": ["from collections.abc import Callable", "$0"],
    "description": "from collections.abc import Callable"
  },
  "icahashable": {
    "prefix": "icahashable",
    "body": ["from collections.abc import Hashable", "$0"],
    "description": "from collections.abc import Hashable"
  },
  "icaiterable": {
    "prefix": "icaiterable",
    "body": ["from collections.abc import Iterable", "$0"],
    "description": "from collections.abc import Iterable"
  },
  "icaiterator": {
    "prefix": "icaiterator",
    "body": ["from collections.abc import Iterator", "$0"],
    "description": "from collections.abc import Iterator"
  },

  "icamapping": {
    "prefix": "icamapping",
    "body": ["from collections.abc import Mapping", "$0"],
    "description": "from collections.abc import Mapping"
  },
  "icasized": {
    "prefix": "icasized",
    "body": ["from collections.abc import Sized", "$0"],
    "description": "from collections.abc import Sized"
  },

  // standard library - datetime
  "idatetime": {
    "prefix": "idatetime",
    "body": ["import datetime as dt", "$0"],
    "description": "import datetime as dt"
  },

  // standard library - contextlib
  "iccontextmanager": {
    "prefix": "iccontextmanager",
    "body": ["from contextlib import contextmanager", "$0"],
    "description": "from contextlib import contextmanager"
  },
  "icredirectstderr": {
    "prefix": "icredirectstderr",
    "body": ["from contextlib import redirect_stderr", "$0"],
    "description": "from contextlib import redirect_stderr"
  },
  "icredirectstdout": {
    "prefix": "icredirectstdout",
    "body": ["from contextlib import redirect_stdout", "$0"],
    "description": "from contextlib import redirect_stdout"
  },
  "icsuppress": {
    "prefix": "icsuppress",
    "body": ["from contextlib import suppress", "$0"],
    "description": "from contextlib import suppress"
  },

  // standard library - dataclasses
  "idasdict": {
    "prefix": "idasdict",
    "body": ["from dataclasses import asdict", "$0"],
    "description": "from dataclasses import asdict"
  },
  "idastuple": {
    "prefix": "idastuple",
    "body": ["from dataclasses import astuple", "$0"],
    "description": "from dataclasses import astuple"
  },
  "iddataclass": {
    "prefix": "iddataclass",
    "body": ["from dataclasses import dataclass", "$0"],
    "description": "from dataclasses import dataclass"
  },
  "idfield": {
    "prefix": "idfield",
    "body": ["from dataclasses import field", "$0"],
    "description": "from dataclasses import field"
  },
  "idfields": {
    "prefix": "idfields",
    "body": ["from dataclasses import fields", "$0"],
    "description": "from dataclasses import fields"
  },
  "idreplace": {
    "prefix": "idreplace",
    "body": ["from dataclasses import replace", "$0"],
    "description": "from dataclasses import replace"
  },

  // standard library - enum
  "ieenum": {
    "prefix": "ieenum",
    "body": ["from enum import Enum", "$0"],
    "description": "from enum import Enum"
  },
  "ieauto": {
    "prefix": "ieauto",
    "body": ["from enum import auto", "$0"],
    "description": "from enum import auto"
  },

  // standard library - functools
  "ifcache": {
    "prefix": "ifcache",
    "body": ["from functools import cache", "$0"],
    "description": "from functools import cache"
  },
  "ifcachedproperty": {
    "prefix": "ifcachedproperty",
    "body": ["from functools import cached_property", "$0"],
    "description": "from functools import cached_property"
  },
  "iflrucache": {
    "prefix": "iflrucache",
    "body": ["from functools import lru_cache", "$0"],
    "description": "from functools import lru_cache"
  },
  "ifpartial": {
    "prefix": "ifpartial",
    "body": ["from functools import partial", "$0"],
    "description": "from functools import partial"
  },
  "ifreduce": {
    "prefix": "ifreduce",
    "body": ["from functools import reduce", "$0"],
    "description": "from functools import reduce"
  },
  "ifupdatewrapper": {
    "prefix": "ifupdatewrapper",
    "body": ["from functools import update_wrapper", "$0"],
    "description": "from functools import update_wrapper"
  },
  "ifwraps": {
    "prefix": "ifwraps",
    "body": ["from functools import wraps", "$0"],
    "description": "from functools import wraps"
  },

  // standard library - future
  "ifannotations": {
    "prefix": "ifannotations",
    "body": ["from __future__ import annotations", "$0"],
    "description": "from __future__ import annotations"
  },

  // standard library - hashlib
  "ihmd5": {
    "prefix": "ihmd5",
    "body": ["from hashlib import md5", "$0"],
    "description": "from hashlib import md5"
  },
  "ihsha256": {
    "prefix": "ihsha256",
    "body": ["from hashlib import sha256", "$0"],
    "description": "from hashlib import sha256"
  },
  "ihsha512": {
    "prefix": "ihsha512",
    "body": ["from hashlib import sha512", "$0"],
    "description": "from hashlib import sha512"
  },

  // standard library - typing
  "ititerable": {
    "prefix": "ititerable",
    "body": ["from typing import Iterable", "$0"],
    "description": "from typing import Iterable"
  },
  "ititerator": {
    "prefix": "ititerator",
    "body": ["from typing import Iterator", "$0"],
    "description": "from typing import Iterator"
  },
  "ittypechecking": {
    "prefix": "ittypechecking",
    "body": ["from typing import TYPE_CHECKING", "$0"],
    "description": "from typing import TYPE_CHECKING"
  },

  // third party - attrs
  "iaasdict": {
    "prefix": "iaasdict",
    "body": ["from attrs import asdict", "$0"],
    "description": "from attrs import asdict"
  },
  "iaastuple": {
    "prefix": "iaastuple",
    "body": ["from attrs import astuple", "$0"],
    "description": "from attrs import astuple"
  },
  "iadefine": {
    "prefix": "iadefine",
    "body": ["from attrs import define", "$0"],
    "description": "from attrs import define"
  },
  "iaevolve": {
    "prefix": "iaevolve",
    "body": ["from attrs import evolve", "$0"],
    "description": "from attrs import evolve"
  },
  "iafield": {
    "prefix": "iafield",
    "body": ["from attrs import field", "$0"],
    "description": "from attrs import field"
  },
  "iafields": {
    "prefix": "iafields",
    "body": ["froma attrs import field", "$0"],
    "description": "from attrs import fields"
  },

  // third party - beartype
  "ibbeartype": {
    "prefix": "ibbeartype",
    "body": ["from beartype import beartype", "$0"],
    "description": "from beartype import beartype"
  },
  "ibddieifunbearable": {
    "prefix": "ibddieifunbearable",
    "body": ["from beartype.door import die_if_unbearable", "$0"],
    "description": "from beartype.door import die_if_unbearable"
  },
  "ibvis": {
    "prefix": "ibvis",
    "body": ["from beartype.value import Is", "$0"],
    "description": "from beartype.vale import Is"
  },
  "ibvisattr": {
    "prefix": "ibvisattr",
    "body": ["from beartype.value import IsAttr", "$0"],
    "description": "from beartype.vale import IsAttr"
  },

  // third party - bidict
  "ibbidict": {
    "prefix": "ibbidict",
    "body": ["from bidict import bidict", "$0"],
    "description": "from bidict import bidict"
  },

  // third party - box
  "ibbox": {
    "prefix": "ibbox",
    "body": ["from box imoprt Box", "$0"],
    "description": "from box imoprt Box"
  },

  // third party - contexttimer
  "ictimer": {
    "prefix": "ictimer",
    "body": ["from contexttimer import Timer", "$0"],
    "description": "from contexttimer import Timer"
  },

  // third party - bs4
  "ibbeautifulsoup": {
    "prefix": "ibbeautifulsoup",
    "body": ["from bs4 import BeautifulSoup", "$0"],
    "description": "from bs4 import BeautifulSoup"
  },

  // third party - faker
  "iffaker": {
    "prefix": "iffaker",
    "body": ["from faker import Faker", "$0"],
    "description": "from faker import Faker"
  },

  // third party - fastparquet
  "ifparquetfile": {
    "prefix": "ifparquetfile",
    "body": ["from fastparquet import ParquetFile", "$0"],
    "description": "from fastparquet import ParquetFile"
  },

  // third party - funcy
  "ifcomplement": {
    "prefix": "ifcomplement",
    "body": ["from funcy import complement", "$0"],
    "description": "from funcy import complement"
  },
  "ifisnone": {
    "prefix": "ifisnone",
    "body": ["from funcy import isnone", "$0"],
    "description": "from funcy import isnone"
  },
  "ifnotnone": {
    "prefix": "ifnotnone",
    "body": ["from funcy import notnone", "$0"],
    "description": "from funcy import notnone"
  },

  // third party - holoviews
  "ihcurve": {
    "prefix": "ihcurve",
    "body": ["from holoviews import Curve", "$0"],
    "description": "from holoviews import Curve"
  },
  "ihhistogram": {
    "prefix": "ihhistogram",
    "body": ["from holoviews import Histogram", "$0"],
    "description": "from holoviews import Histogram"
  },
  "ihhline": {
    "prefix": "ihhline",
    "body": ["from holoviews import HLine", "$0"],
    "description": "from holoviews import HLine"
  },
  "ihndoverlay": {
    "prefix": "ihndoverlay",
    "body": ["from holoviews import NDOverlay", "$0"],
    "description": "from holoviews import NDOverlay"
  },
  "ihoverlay": {
    "prefix": "ihoverlay",
    "body": ["from holoviews import Overlay", "$0"],
    "description": "from holoviews import Overlay"
  },
  "ihtable": {
    "prefix": "ihtable",
    "body": ["from holoviews import Table", "$0"],
    "description": "from holoviews import Table"
  },

  // third party - humanize
  "ihfractional": {
    "prefix": "ihfractional",
    "body": ["from humanize import fractional", "$0"],
    "description": "from humanize import fractional"
  },
  "ihintcomma": {
    "prefix": "ihintcomma",
    "body": ["from humanize import intcomma", "$0"],
    "description": "from humanize import intcomma"
  },
  "ihintword": {
    "prefix": "ihintword",
    "body": ["from humanize import intword", "$0"],
    "description": "from humanize import intword"
  },
  "ihnaturaldate": {
    "prefix": "ihnaturaldate",
    "body": ["from humanize import naturaldate", "$0"],
    "description": "from humanize import naturaldate"
  },
  "ihnaturalday": {
    "prefix": "ihnaturalday",
    "body": ["from humanize import naturalday", "$0"],
    "description": "from humanize import naturalday"
  },
  "ihnaturaldelta": {
    "prefix": "ihnaturaldelta",
    "body": ["from humanize import naturaldelta", "$0"],
    "description": "from humanize import naturaldelta"
  },
  "ihnaturalsize": {
    "prefix": "ihnaturalsize",
    "body": ["from humanize import naturalsize", "$0"],
    "description": "from humanize import naturalsize"
  },
  "ihnaturaltime": {
    "prefix": "ihnaturaltime",
    "body": ["from humanize import naturaltime", "$0"],
    "description": "from humanize import naturaltime"
  },
  "ihprecisedelta": {
    "prefix": "ihprecisedelta",
    "body": ["from humanize import precisedelta", "$0"],
    "description": "from humanize import precisedelta"
  },

  // third party - hypothesis
  "ihhealthcheck": {
    "prefix": "ihhealthcheck",
    "body": ["kfrom hypothesis import HealthCheck", "$0"],
    "description": "kfrom hypothesis import HealthCheck"
  },
  "ihassume": {
    "prefix": "ihassume",
    "body": ["from hypothesis import assume", "$0"],
    "description": "from hypothesis import assume"
  },
  "ihgiven": {
    "prefix": "ihgiven",
    "body": ["from hypothesis import given", "$0"],
    "description": "from hypothesis import given"
  },
  "ihinfer": {
    "prefix": "ihinfer",
    "body": ["from hypothesis import infer", "$0"],
    "description": "from hypothesis import infer"
  },
  "ihreproducefailure": {
    "prefix": "ihreproducefailure",
    "body": ["from hypothesis import reproduce_failure", "$0"],
    "description": "from hypothesis import reproduce_failure"
  },
  "ihsettings": {
    "prefix": "ihsettings",
    "body": ["from hypothesis import settings", "$0"],
    "description": "from hypothesis import settings"
  },
  "ihsdataobject": {
    "prefix": "ihsdataobject",
    "body": ["from hypothesis.strategies import DataObject", "$0"],
    "description": "from hypothesis.strategies import DataObject"
  },
  "ihssearchstrategy": {
    "prefix": "ihssearchstrategy",
    "body": ["from hypothesis.strategies import SearchStrategy", "$0"],
    "description": "from hypothesis.strategies import SearchStrategy"
  },
  "ihsbooleans": {
    "prefix": "ihsbooleans",
    "body": ["from hypothesis.strategies import booleans", "$0"],
    "description": "from hypothesis.strategies import booleans"
  },
  "ihscomplexnumbers": {
    "prefix": "ihscomplexnumbers",
    "body": ["from hypothesis.strategies import complex_numbers", "$0"],
    "description": "from hypothesis.strategies import complex_numbers"
  },
  "ihsdictionaries": {
    "prefix": "ihsdictionaries",
    "body": ["from hypothesis.strategies import dictionaries", "$0"],
    "description": "from hypothesis.strategies import dictionaries"
  },
  "ihsfixeddictionaries": {
    "prefix": "ihsfixeddictionaries",
    "body": ["from hypothesis.strategies import fixed_dictionaries", "$0"],
    "description": "from hypothesis.strategies import fixed_dictionaries"
  },
  "ihsfloats": {
    "prefix": "ihsfloats",
    "body": ["from hypothesis.strategies import floats", "$0"],
    "description": "from hypothesis.strategies import floats"
  },
  "ihsfromtype": {
    "prefix": "ihsfromtype",
    "body": ["from hypothesis.strategies import from_type", "$0"],
    "description": "from hypothesis.strategies import from_type"
  },
  "ihsintegers": {
    "prefix": "ihsintegers",
    "body": ["from hypothesis.strategies import integers", "$0"],
    "description": "from hypothesis.strategies import integers"
  },
  "ihsjust": {
    "prefix": "ihsjust",
    "body": ["from hypothesis.strategies import just", "$0"],
    "description": "from hypothesis.strategies import just"
  },
  "ihslists": {
    "prefix": "ihslists",
    "body": ["from hypothesis.strategies import lists", "$0"],
    "description": "from hypothesis.strategies import lists"
  },
  "ihsnone": {
    "prefix": "ihsnone",
    "body": ["from hypothesis.strategies import none", "$0"],
    "description": "from hypothesis.strategies import none"
  },
  "ihssampledfrom": {
    "prefix": "ihssampledfrom",
    "body": ["from hypothesis.strategies import sampled_from", "$0"],
    "description": "from hypothesis.strategies import sampled_from"
  },
  "ihssets": {
    "prefix": "ihssets",
    "body": ["from hypothesis.strategies import sets", "$0"],
    "description": "from hypothesis.strategies import sets"
  },
  "ihsshared": {
    "prefix": "ihsshared",
    "body": ["from hypothesis.strategies import shared", "$0"],
    "description": "from hypothesis.strategies import shared"
  },
  "ihstext": {
    "prefix": "ihstext",
    "body": ["from hypothesis.strategies import text", "$0"],
    "description": "from hypothesis.strategies import text"
  },
  "ihstuples": {
    "prefix": "ihstuples",
    "body": ["from hypothesis.strategies import tuples", "$0"],
    "description": "from hypothesis.strategies import tuples"
  },
  "ihedliveservertestcase": {
    "prefix": "ihedliveservertestcase",
    "body": ["from hypothesis.extra.django import LiveServerTestCase", "$0"],
    "description": "from hypothesis.extra.django import LiveServerTestCase"
  },
  "ihedstaticliveservertestcase": {
    "prefix": "ihedstaticliveservertestcase",
    "body": [
      "from hypothesis.extra.django import StaticLiveServerTestCase",
      "$0"
    ],
    "description": "from hypothesis.extra.django import StaticLiveServerTestCase"
  },
  "ihedtransactiontestcase": {
    "prefix": "ihedtransactiontestcase",
    "body": ["from hypothesis.extra.django import TransactionTestCase", "$0"],
    "description": "from hypothesis.extra.django import TransactionTestCase"
  },
  "ihedfromform": {
    "prefix": "ihedfromform",
    "body": ["from hypothesis.extra.django import from_form", "$0"],
    "description": "from hypothesis.extra.django import from_form"
  },
  "ihedfrommodel": {
    "prefix": "ihedfrommodel",
    "body": ["from hypothesis.extra.django import from_model", "$0"],
    "description": "from hypothesis.extra.django import from_model"
  },
  "ihenarraydtypes": {
    "prefix": "ihenarraydtypes",
    "body": ["from hypothesis.extra.numpy import array_dtypes", "$0"],
    "description": "from hypothesis.extra.numpy import array_dtypes"
  },
  "ihenarrayshapes": {
    "prefix": "ihenarrayshapes",
    "body": ["from hypothesis.extra.numpy import array_shapes", "$0"],
    "description": "from hypothesis.extra.numpy import array_shapes"
  },
  "ihenarrays": {
    "prefix": "ihenarrays",
    "body": ["from hypothesis.extra.numpy import arrays", "$0"],
    "description": "from hypothesis.extra.numpy import arrays"
  },
  "ihenfromdtype": {
    "prefix": "ihenfromdtype",
    "body": ["from hypothesis.extra.numpy import from_dtype", "$0"],
    "description": "from hypothesis.extra.numpy import from_dtype"
  },
  "ihenscalardtypes": {
    "prefix": "ihenscalardtypes",
    "body": ["from hypothesis.extra.numpy import scalar_dtypes", "$0"],
    "description": "from hypothesis.extra.numpy import scalar_dtypes"
  },
  "ihepcolumn": {
    "prefix": "ihepcolumn",
    "body": ["from hypothesis.extra.pandas import column", "$0"],
    "description": "from hypothesis.extra.pandas import column"
  },
  "ihepcolumns": {
    "prefix": "ihepcolumns",
    "body": ["from hypothesis.extra.pandas import columns", "$0"],
    "description": "from hypothesis.extra.pandas import columns"
  },
  "ihepdataframes": {
    "prefix": "ihepdataframes",
    "body": ["from hypothesis.extra.pandas import data_frames", "$0"],
    "description": "from hypothesis.extra.pandas import data_frames"
  },
  "ihepindexes": {
    "prefix": "ihepindexes",
    "body": ["from hypothesis.extra.pandas import indexes", "$0"],
    "description": "from hypothesis.extra.pandas import indexes"
  },
  "iheprangeindexes": {
    "prefix": "iheprangeindexes",
    "body": ["from hypothesis.extra.pandas import range_indexes", "$0"],
    "description": "from hypothesis.extra.pandas import range_indexes"
  },
  "ihepseries": {
    "prefix": "ihepseries",
    "body": ["from hypothesis.extra.pandas import series", "$0"],
    "description": "from hypothesis.extra.pandas import series"
  },

  // third party - pandas
  "ippd": {
    "prefix": "ippd",
    "body": ["import pandas as pd", "$0"],
    "description": "import pandas"
  },
  "iptimedelta": {
    "prefix": "iptimedelta",
    "body": ["from pandas import Timedelta", "$0"],
    "description": "from pandas import Timedelta"
  },
  "iptimestamp": {
    "prefix": "iptimestamp",
    "body": ["from pandas import Timestamp", "$0"],
    "description": "from pandas import Timestamp"
  },

  // third party - sqlalchemy
  "ismetadata": {
    "prefix": "ismetadata",
    "body": ["from sqlalchemy import MetaData", "$0"],
    "description": "from sqlalchemy import MetaData"
  },
  "istable": {
    "prefix": "istable",
    "body": ["from sqlalchemy import Table", "$0"],
    "description": "from sqlalchemy import Table"
  },
  "iscreateengine": {
    "prefix": "iscreateengine",
    "body": ["from sqlalchemy import create_engine", "$0"],
    "description": "from sqlalchemy import create_engine"
  },

  // third party - typing-extensions
  "iteself": {
    "prefix": "iteself",
    "body": ["from typing_extensions import Self", "$0"],
    "description": "from typing_extensions import Self"
  },
  "iteoverride": {
    "prefix": "iteoverride",
    "body": ["from typing_extensions import override", "$0"],
    "description": "from typing_extensions import override"
  }
}
