// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
// same ids are connected.
// Example:
// "Print to console": {
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }
{
  // standard library - abc
  "import abc": {
    "prefix": "import abc",
    "body": ["import abc", "$0"]
  },
  "from abc import ABC": {
    "prefix": "fromabcimportabc",
    "body": ["from abc import ABC", "$0"]
  },
  "from abc import ABCMeta": {
    "prefix": "from abc import ABCMeta",
    "body": ["from abc import ABCMeta", "$0"]
  },
  "from abc import abstractmethod": {
    "prefix": "from abc import abstractmethod",
    "body": ["from abc import abstractmethod", "$0"]
  },

  // standard library - argparse
  "import argparse": {
    "prefix": "import argparse",
    "body": ["import argparse", "$0"]
  },
  "from argparse import ArgumentParser": {
    "prefix": "from argparse import ArgumentParser",
    "body": ["from argparse import ArgumentParser", "$0"]
  },

  // standard library - collections
  "import collections": {
    "prefix": "import collections",
    "body": ["import collections", "$0"]
  },
  "import collections.abc": {
    "prefix": "import collections.abc",
    "body": ["import collections.abc", "$0"]
  },
  "from collections import Counter": {
    "prefix": "from collections import Counter",
    "body": ["from collections import Counter", "$0"]
  },
  "from collections import defaultdict": {
    "prefix": "from collections import defaultdict",
    "body": ["from collections import defaultdict", "$0"]
  },
  "from collections import deque": {
    "prefix": "from collections import deque",
    "body": ["from collections import deque", "$0"]
  },
  "from collections.abc import Awaitable": {
    "prefix": "from collections.abc import Awaitable",
    "body": ["from collections.abc import Awaitable", "$0"]
  },
  "from collections.abc import Callable": {
    "prefix": "from collections.abc import Callable",
    "body": ["from collections.abc import Callable", "$0"]
  },
  "from collections.abc import hashable": {
    "prefix": "from collections.abc import Hashable",
    "body": ["from collections.abc import Hashable", "$0"]
  },
  "from collections.abc import Iterable": {
    "prefix": "from collections.abc import Iterable",
    "body": ["from collections.abc import Iterable", "$0"]
  },
  "from collections.abc import Iterator": {
    "prefix": "from collections.abc import Iterator",
    "body": ["from collections.abc import Iterator", "$0"]
  },
  "from collections.abc import Mapping": {
    "prefix": "from collections.abc import Mapping",
    "body": ["from collections.abc import Mapping", "$0"]
  },
  "from collections.abc import Sized": {
    "prefix": "from collections.abc import Sized",
    "body": ["from collections.abc import Sized", "$0"]
  },

  // standard library - contextlib
  "import contextlib": {
    "prefix": "import contextlib",
    "body": ["import contextlib", "$0"]
  },
  "from contextlib import contextmanager": {
    "prefix": "from contextlib import contextmanager",
    "body": ["from contextlib import contextmanager", "$0"]
  },
  "from contextlib import redirect_stderr": {
    "prefix": "from contextlib import redirect_stderr",
    "body": ["from contextlib import redirect_stderr", "$0"]
  },
  "from contextlib import redirect_stdout": {
    "prefix": "from contextlib import redirect_stdout",
    "body": ["from contextlib import redirect_stdout", "$0"]
  },
  "from contextlib import suppress": {
    "prefix": "from contextlib import suppress",
    "body": ["from contextlib import suppress", "$0"]
  },

  // standard library - dataclasses
  "import dataclasses": {
    "prefix": "import dataclasses",
    "body": ["import dataclasses", "$0"]
  },
  "from dataclasses import asdict": {
    "prefix": "from dataclasses import asdict",
    "body": ["from dataclasses import asdict", "$0"]
  },
  "from dataclasses import astuple": {
    "prefix": "from dataclasses import astuple",
    "body": ["from dataclasses import astuple", "$0"]
  },
  "from dataclasses import dataclass": {
    "prefix": "from dataclasses import dataclass",
    "body": ["from dataclasses import dataclass", "$0"]
  },
  "from dataclasses import field": {
    "prefix": "from dataclasses import field",
    "body": ["from dataclasses import field", "$0"]
  },
  "from dataclasses import fields": {
    "prefix": "from dataclasses import fields",
    "body": ["from dataclasses import fields", "$0"]
  },
  "from dataclasses import replace": {
    "prefix": "from dataclasses import replace",
    "body": ["from dataclasses import replace", "$0"]
  },

  // standard library - datetime
  "import datetime as dt": {
    "prefix": "import datetime as dt",
    "body": ["import datetime as dt", "$0"]
  },

  // standard library - enum
  "import enum": {
    "prefix": "import enum",
    "body": ["import enum", "$0"]
  },
  "from enum import Enum": {
    "prefix": "from enum import Enum",
    "body": ["from enum import Enum", "$0"]
  },
  "from enum import auto": {
    "prefix": "from enum import auto",
    "body": ["from enum import auto", "$0"]
  },

  // standard library - functools
  "import functools": {
    "prefix": "import functools",
    "body": ["import functools", "$0"]
  },
  "from functools import cache": {
    "prefix": "from functools import cache",
    "body": ["from functools import cache", "$0"]
  },
  "from functools import cached_property": {
    "prefix": "from functools import cached_property",
    "body": ["from functools import cached_property", "$0"]
  },
  "from functools import lru_cache": {
    "prefix": "from functools import lru_cache",
    "body": ["from functools import lru_cache", "$0"]
  },
  "from functools import partial": {
    "prefix": "from functools import partial",
    "body": ["from functools import partial", "$0"]
  },
  "from functools import reduce": {
    "prefix": "from functools import reduce",
    "body": ["from functools import reduce", "$0"]
  },
  "from functools import update_wrapper": {
    "prefix": "from functools import update_wrapper",
    "body": ["from functools import update_wrapper", "$0"]
  },
  "from functools import wraps": {
    "prefix": "from functools import wraps",
    "body": ["from functools import wraps", "$0"]
  },

  // standard library - future
  "from __future__ import annotations": {
    "prefix": "from __future__ import annotations",
    "body": ["from __future__ import annotations", "$0"]
  },

  // standard library - gzip
  "import gzip": {
    "prefix": "import gzip",
    "body": ["import gzip", "$0"]
  },

  // standard library - hashlib
  "import hashlib": {
    "prefix": "import hashlib",
    "body": ["import hashlib", "$0"]
  },
  "from hashlib import md5": {
    "prefix": "from hashlib import md5",
    "body": ["from hashlib import md5", "$0"]
  },
  "from hashlib import sha256": {
    "prefix": "from hashlib import sha256",
    "body": ["from hashlib import sha256", "$0"]
  },
  "from hashlib import sha512": {
    "prefix": "from hashlib import sha512",
    "body": ["from hashlib import sha512", "$0"]
  },

  // standard library - importlib
  "import importlib": {
    "prefix": "import importlib",
    "body": ["import importlib", "$0"]
  },
  "from importlib import reload": {
    "prefix": "from importlib import reload",
    "body": ["from importlib import reload", "$0"]
  },

  // standard library - inspect
  "import inspect": {
    "prefix": "import inspect",
    "body": ["import inspect", "$0"]
  },
  "from inspect import getattr_static": {
    "prefix": "from inspect import getattr_static",
    "body": ["from inspect import getattr_static", "$0"]
  },
  "from inspect import signature": {
    "prefix": "from inspect import signature",
    "body": ["from inspect import signature", "$0"]
  },

  // standard library - io
  "import io": {
    "prefix": "import io",
    "body": ["import io", "$0"]
  },
  "from io import BytesIO": {
    "prefix": "from io import BytesIO",
    "body": ["from io import BytesIO", "$0"]
  },
  "from io import StringIO": {
    "prefix": "from io import StringIO",
    "body": ["from io import StringIO", "$0"]
  },

  // standard library - itertools
  "import itertools": {
    "prefix": "import itertools",
    "body": ["import itertools", "$0"]
  },
  "from itertools import accumulate": {
    "prefix": "from itertools import accumulate",
    "body": ["from itertools import accumulate", "$0"]
  },
  "from itertools import chain": {
    "prefix": "from itertools import chain",
    "body": ["from itertools import chain", "$0"]
  },
  "from itertools import combinations": {
    "prefix": "from itertools import combinations",
    "body": ["from itertools import combinations", "$0"]
  },
  "from itertools import combinations_with_replacement": {
    "prefix": "from itertools import combinations_with_replacement",
    "body": ["from itertools import combinations_with_replacement", "$0"]
  },
  "from itertools import compress": {
    "prefix": "from itertools import compress",
    "body": ["from itertools import compress", "$0"]
  },
  "from itertools import count": {
    "prefix": "from itertools import count",
    "body": ["from itertools import count", "$0"]
  },
  "from itertools import cycle": {
    "prefix": "from itertools import cycle",
    "body": ["from itertools import cycle", "$0"]
  },
  "from itertools import dropwhile": {
    "prefix": "from itertools import dropwhile",
    "body": ["from itertools import dropwhile", "$0"]
  },
  "from itertools import filterfalse": {
    "prefix": "from itertools import filterfalse",
    "body": ["from itertools import filterfalse", "$0"]
  },
  "from itertools import groupby": {
    "prefix": "from itertools import groupby",
    "body": ["from itertools import groupby", "$0"]
  },
  "from itertools import islice": {
    "prefix": "from itertools import islice",
    "body": ["from itertools import islice", "$0"]
  },
  "from itertools import permutations": {
    "prefix": "from itertools import permutations",
    "body": ["from itertools import permutations", "$0"]
  },
  "from itertools import product": {
    "prefix": "from itertools import product",
    "body": ["from itertools import product", "$0"]
  },
  "from itertools import repeat": {
    "prefix": "from itertools import repeat",
    "body": ["from itertools import repeat", "$0"]
  },
  "from itertools import starmap": {
    "prefix": "from itertools import starmap",
    "body": ["from itertools import starmap", "$0"]
  },
  "from itertools import tabulate": {
    "prefix": "from itertools import tabulate",
    "body": ["from itertools import tabulate", "$0"]
  },
  "from itertools import takewhile": {
    "prefix": "from itertools import takewhile",
    "body": ["from itertools import takewhile", "$0"]
  },
  "from itertools import tee": {
    "prefix": "from itertools import tee",
    "body": ["from itertools import tee", "$0"]
  },
  "from itertools import zip_longest": {
    "prefix": "from itertools import zip_longest",
    "body": ["from itertools import zip_longest", "$0"]
  },

  // standard library - json
  "import json": {
    "prefix": "import json",
    "body": ["import json", "$0"]
  },
  "from json import JSONDecoder": {
    "prefix": "from json import JSONDecoder",
    "body": ["from json import JSONDecoder", "$0"]
  },
  "from json import JSONEncoder": {
    "prefix": "from json import JSONEncoder",
    "body": ["from json import JSONEncoder", "$0"]
  },

  // standard library - logging
  "import logging": {
    "prefix": "import logging",
    "body": ["import logging", "$0"]
  },
  "from logging import basicConfig": {
    "prefix": "from logging import basicConfig",
    "body": ["from logging import basicConfig", "$0"]
  },
  "from logging import DEBUG": {
    "prefix": "from logging import DEBUG",
    "body": ["from logging import DEBUG", "$0"]
  },
  "from logging import ERROR": {
    "prefix": "from logging import ERROR",
    "body": ["from logging import ERROR", "$0"]
  },
  "from logging import INFO": {
    "prefix": "from logging import INFO",
    "body": ["from logging import INFO", "$0"]
  },
  "from logging import WARNING": {
    "prefix": "from logging import WARNING",
    "body": ["from logging import WARNING", "$0"]
  },
  "from logging.config import dictConfig": {
    "prefix": "from logging.config import dictConfig",
    "body": ["from logging.config import dictConfig", "$0"]
  },

  // standard library - typing
  "from typing import TYPE_CHECKING": {
    "prefix": "from typing import TYPE_CHECKING",
    "body": ["from typing import TYPE_CHECKING", "$0"]
  },
  "from typing import Any": {
    "prefix": "from typing import Any",
    "body": ["from typing import Any", "$0"]
  },
  "from typing import BinaryIO": {
    "prefix": "from typing import BinaryIO",
    "body": ["from typing import BinaryIO", "$0"]
  },
  "from typing import Deque": {
    "prefix": "from typing import Deque",
    "body": ["from typing import Deque", "$0"]
  },
  "from typing import Generic": {
    "prefix": "from typing import Generic",
    "body": ["from typing import Generic", "$0"]
  },
  "from typing import Iterable": {
    "prefix": "from typing import Iterable",
    "body": ["from typing import Iterable", "$0"]
  },
  "from typing import Iterator": {
    "prefix": "from typing import Iterator",
    "body": ["from typing import Iterator", "$0"]
  },
  "from typing import NamedTuple": {
    "prefix": "from typing import NamedTuple",
    "body": ["from typing import NamedTuple", "$0"]
  },
  "from typing import NewType": {
    "prefix": "from typing import NewType",
    "body": ["from typing import NewType", "$0"]
  },
  "from typing import TextIO": {
    "prefix": "from typing import TextIO",
    "body": ["from typing import TextIO", "$0"]
  },
  "from typing import TypeVar": {
    "prefix": "from typing import TypeVar",
    "body": ["from typing import TypeVar", "$0"]
  },
  "from typing import Union": {
    "prefix": "from typing import Union",
    "body": ["from typing import Union", "$0"]
  },
  "from typing import cast": {
    "prefix": "from typing import cast",
    "body": ["from typing import cast", "$0"]
  },

  // third party - attrs
  "import attrs": {
    "prefix": "import attrs",
    "body": ["import attrs", "$0"]
  },
  "from attrs import asdict": {
    "prefix": "from attrs import asdict",
    "body": ["from attrs import asdict", "$0"]
  },
  "from attrs import astuple": {
    "prefix": "from attrs import astuple",
    "body": ["from attrs import astuple", "$0"]
  },
  "from attrs import define": {
    "prefix": "from attrs import define",
    "body": ["from attrs import define", "$0"]
  },
  "from attrs import evolve": {
    "prefix": "from attrs import evolve",
    "body": ["from attrs import evolve", "$0"]
  },
  "from attrs import field": {
    "prefix": "from attrs import field",
    "body": ["from attrs import field", "$0"]
  },
  "from attrs import fields": {
    "prefix": "from attrs import fields",
    "body": ["from attrs import fields", "$0"]
  },
  "from attrs import frozen": {
    "prefix": "from attrs import frozen",
    "body": ["from attrs import frozen", "$0"]
  },

  // third party - beartype
  "from beartype import beartype": {
    "prefix": "from beartype import beartype",
    "body": ["from beartype import beartype", "$0"]
  },
  "from beartype.door import die_if_unbearable": {
    "prefix": "from beartype.door import die_if_unbearable",
    "body": ["from beartype.door import die_if_unbearable", "$0"]
  },
  "from beartype.vale import Is": {
    "prefix": "from beartype.vale import Is",
    "body": ["from beartype.vale import Is", "$0"]
  },
  "from beartype.vale import IsAttr": {
    "prefix": "from beartype.vale import IsAttr",
    "body": ["from beartype.vale import IsAttr", "$0"]
  },
  "from beartype.vale import IsEqual": {
    "prefix": "from beartype.vale import IsEqual",
    "body": ["from beartype.vale import IsEqual", "$0"]
  },
  "from beartype.vale import IsSubclass": {
    "prefix": "from beartype.vale import IsSubclass",
    "body": ["from beartype.vale import IsSubclass", "$0"]
  },

  // third party - bidict
  "from bidict import bidict": {
    "prefix": "from bidict import bidict",
    "body": ["from bidict import bidict", "$0"]
  },

  // third party - box
  "import box": {
    "prefix": "import box",
    "body": ["import box", "$0"]
  },
  "from box import Box": {
    "prefix": "from box import Box",
    "body": ["from box import Box", "$0"]
  },

  // third party - bs4
  "import bs4": {
    "prefix": "import bs4",
    "body": ["import bs4", "$0"]
  },
  "from bs4 import BeautifulSoup": {
    "prefix": "from bs4 import BeautifulSoup",
    "body": ["from bs4 import BeautifulSoup", "$0"]
  },

  // third party - contexttimer
  "import contexttimer": {
    "prefix": "import contexttimer",
    "body": ["import contexttimer", "$0"]
  },
  "from contexttimer import Timer": {
    "prefix": "from contexttimer import Timer",
    "body": ["from contexttimer import Timer", "$0"]
  },

  // third party - dtale
  "import dtale": {
    "prefix": "import dtale",
    "body": ["import dtale", "$0"]
  },

  // third party - faker
  "import faker": {
    "prefix": "import faker",
    "body": ["import faker", "$0"]
  },
  "from faker import Faker": {
    "prefix": "from faker import Faker",
    "body": ["from faker import Faker", "$0"]
  },

  // third party - fastparquet
  "import fastparquet": {
    "prefix": "import fastparquet",
    "body": ["import fastparquet", "$0"]
  },
  "from fastparquet import ParquetFile": {
    "prefix": "from fastparquet import ParquetFile",
    "body": ["from fastparquet import ParquetFile", "$0"]
  },

  // third party - funcy
  "import funcy": {
    "prefix": "import funcy",
    "body": ["import funcy", "$0"]
  },
  "from funcy import complement": {
    "prefix": "from funcy import complement",
    "body": ["from funcy import complement", "$0"]
  },
  "from funcy import isnone": {
    "prefix": "from funcy import isnone",
    "body": ["from funcy import isnone", "$0"]
  },
  "from funcy import notnone": {
    "prefix": "from funcy import notnone",
    "body": ["from funcy import notnone", "$0"]
  },

  // third party - holoviews
  "import holoviews": {
    "prefix": "import holoviews",
    "body": ["import holoviews", "$0"]
  },
  "import holoviews as hv": {
    "prefix": "import holoviews as hv",
    "body": ["import holoviews as hv", "$0"]
  },
  "from holoviews import Curve": {
    "prefix": "from holoviews import Curve",
    "body": ["from holoviews import Curve", "$0"]
  },
  "from holoviews import Histogram": {
    "prefix": "from holoviews import Histogram",
    "body": ["from holoviews import Histogram", "$0"]
  },
  "from holoviews import HLine": {
    "prefix": "from holoviews import HLine",
    "body": ["from holoviews import HLine", "$0"]
  },
  "from holoviews import NDOverlay": {
    "prefix": "from holoviews import NDOverlay",
    "body": ["from holoviews import NDOverlay", "$0"]
  },
  "from holoviews import Overlay": {
    "prefix": "from holoviews import Overlay",
    "body": ["from holoviews import Overlay", "$0"]
  },
  "from holoviews import Table": {
    "prefix": "from holoviews import Table",
    "body": ["from holoviews import Table", "$0"]
  },

  // third party - humanize
  "import humanize": {
    "prefix": "import humanize",
    "body": ["import humanize", "$0"]
  },
  "from humanize import fractional": {
    "prefix": "from humanize import fractional",
    "body": ["from humanize import fractional", "$0"]
  },
  "from humanize import intcomma": {
    "prefix": "from humanize import intcomma",
    "body": ["from humanize import intcomma", "$0"]
  },
  "from humanize import intword": {
    "prefix": "from humanize import intword",
    "body": ["from humanize import intword", "$0"]
  },
  "from humanize import naturaldate": {
    "prefix": "from humanize import naturaldate",
    "body": ["from humanize import naturaldate", "$0"]
  },
  "from humanize import naturalday": {
    "prefix": "from humanize import naturalday",
    "body": ["from humanize import naturalday", "$0"]
  },
  "from humanize import naturaldelta": {
    "prefix": "from humanize import naturaldelta",
    "body": ["from humanize import naturaldelta", "$0"]
  },
  "from humanize import naturalsize": {
    "prefix": "from humanize import naturalsize",
    "body": ["from humanize import naturalsize", "$0"]
  },
  "from humanize import naturaltime": {
    "prefix": "from humanize import naturaltime",
    "body": ["from humanize import naturaltime", "$0"]
  },
  "from humanize import precisedelta": {
    "prefix": "from humanize import precisedelta",
    "body": ["from humanize import precisedelta", "$0"]
  },

  // third party - hvplot
  "import hvplot.pandas": {
    "prefix": "import hvplot.pandas",
    "body": ["import hvplot.pandas", "$0"]
  },
  "import hvplot.xarray": {
    "prefix": "import hvplot.xarray",
    "body": ["import hvplot.xarray", "$0"]
  },

  // third party - hypothesis
  "import hypothesis": {
    "prefix": "import hypothesis",
    "body": ["import hypothesis", "$0"]
  },
  "import hypothesis.strategies": {
    "prefix": "import hypothesis.strategies",
    "body": ["import hypothesis.strategies", "$0"]
  },
  "kfrom hypothesis import HealthCheck": {
    "prefix": "kfrom hypothesis import HealthCheck",
    "body": ["kfrom hypothesis import HealthCheck", "$0"]
  },
  "from hypothesis import assume": {
    "prefix": "from hypothesis import assume",
    "body": ["from hypothesis import assume", "$0"]
  },
  "from hypothesis import given": {
    "prefix": "from hypothesis import given",
    "body": ["from hypothesis import given", "$0"]
  },
  "from hypothesis import infer": {
    "prefix": "from hypothesis import infer",
    "body": ["from hypothesis import infer", "$0"]
  },
  "from hypothesis import reproduce_failure": {
    "prefix": "from hypothesis import reproduce_failure",
    "body": ["from hypothesis import reproduce_failure", "$0"]
  },
  "from hypothesis import settings": {
    "prefix": "from hypothesis import settings",
    "body": ["from hypothesis import settings", "$0"]
  },
  "from hypothesis.strategies import DataObject": {
    "prefix": "from hypothesis.strategies import DataObject",
    "body": ["from hypothesis.strategies import DataObject", "$0"]
  },
  "from hypothesis.strategies import SearchStrategy": {
    "prefix": "from hypothesis.strategies import SearchStrategy",
    "body": ["from hypothesis.strategies import SearchStrategy", "$0"]
  },
  "from hypothesis.strategies import booleans": {
    "prefix": "from hypothesis.strategies import booleans",
    "body": ["from hypothesis.strategies import booleans", "$0"]
  },
  "from hypothesis.strategies import complex_numbers": {
    "prefix": "from hypothesis.strategies import complex_numbers",
    "body": ["from hypothesis.strategies import complex_numbers", "$0"]
  },
  "from hypothesis.strategies import dictionaries": {
    "prefix": "from hypothesis.strategies import dictionaries",
    "body": ["from hypothesis.strategies import dictionaries", "$0"]
  },
  "from hypothesis.strategies import fixed_dictionaries": {
    "prefix": "from hypothesis.strategies import fixed_dictionaries",
    "body": ["from hypothesis.strategies import fixed_dictionaries", "$0"]
  },
  "from hypothesis.strategies import floats": {
    "prefix": "from hypothesis.strategies import floats",
    "body": ["from hypothesis.strategies import floats", "$0"]
  },
  "from hypothesis.strategies import from_type": {
    "prefix": "from hypothesis.strategies import from_type",
    "body": ["from hypothesis.strategies import from_type", "$0"]
  },
  "from hypothesis.strategies import integers": {
    "prefix": "from hypothesis.strategies import integers",
    "body": ["from hypothesis.strategies import integers", "$0"]
  },
  "from hypothesis.strategies import just": {
    "prefix": "from hypothesis.strategies import just",
    "body": ["from hypothesis.strategies import just", "$0"]
  },
  "from hypothesis.strategies import lists": {
    "prefix": "from hypothesis.strategies import lists",
    "body": ["from hypothesis.strategies import lists", "$0"]
  },
  "from hypothesis.strategies import none": {
    "prefix": "from hypothesis.strategies import none",
    "body": ["from hypothesis.strategies import none", "$0"]
  },
  "from hypothesis.strategies import sampled_from": {
    "prefix": "from hypothesis.strategies import sampled_from",
    "body": ["from hypothesis.strategies import sampled_from", "$0"]
  },
  "from hypothesis.strategies import sets": {
    "prefix": "from hypothesis.strategies import sets",
    "body": ["from hypothesis.strategies import sets", "$0"]
  },
  "from hypothesis.strategies import shared": {
    "prefix": "from hypothesis.strategies import shared",
    "body": ["from hypothesis.strategies import shared", "$0"]
  },
  "from hypothesis.strategies import text": {
    "prefix": "from hypothesis.strategies import text",
    "body": ["from hypothesis.strategies import text", "$0"]
  },
  "from hypothesis.strategies import tuples": {
    "prefix": "from hypothesis.strategies import tuples",
    "body": ["from hypothesis.strategies import tuples", "$0"]
  },
  "from hypothesis.extra.django import LiveServerTestCase": {
    "prefix": "from hypothesis.extra.django import LiveServerTestCase",
    "body": ["from hypothesis.extra.django import LiveServerTestCase", "$0"]
  },
  "from hypothesis.extra.django import StaticLiveServerTestCase": {
    "prefix": "from hypothesis.extra.django import StaticLiveServerTestCase",
    "body": [
      "from hypothesis.extra.django import StaticLiveServerTestCase",
      "$0"
    ]
  },
  "from hypothesis.extra.django import TransactionTestCase": {
    "prefix": "from hypothesis.extra.django import TransactionTestCase",
    "body": ["from hypothesis.extra.django import TransactionTestCase", "$0"]
  },
  "from hypothesis.extra.django import from_form": {
    "prefix": "from hypothesis.extra.django import from_form",
    "body": ["from hypothesis.extra.django import from_form", "$0"]
  },
  "from hypothesis.extra.django import from_model": {
    "prefix": "from hypothesis.extra.django import from_model",
    "body": ["from hypothesis.extra.django import from_model", "$0"]
  },
  "from hypothesis.extra.numpy import array_dtypes": {
    "prefix": "from hypothesis.extra.numpy import array_dtypes",
    "body": ["from hypothesis.extra.numpy import array_dtypes", "$0"]
  },
  "from hypothesis.extra.numpy import array_shapes": {
    "prefix": "from hypothesis.extra.numpy import array_shapes",
    "body": ["from hypothesis.extra.numpy import array_shapes", "$0"]
  },
  "from hypothesis.extra.numpy import arrays": {
    "prefix": "from hypothesis.extra.numpy import arrays",
    "body": ["from hypothesis.extra.numpy import arrays", "$0"]
  },
  "from hypothesis.extra.numpy import from_dtype": {
    "prefix": "from hypothesis.extra.numpy import from_dtype",
    "body": ["from hypothesis.extra.numpy import from_dtype", "$0"]
  },
  "from hypothesis.extra.numpy import scalar_dtypes": {
    "prefix": "from hypothesis.extra.numpy import scalar_dtypes",
    "body": ["from hypothesis.extra.numpy import scalar_dtypes", "$0"]
  },
  "from hypothesis.extra.pandas import column": {
    "prefix": "from hypothesis.extra.pandas import column",
    "body": ["from hypothesis.extra.pandas import column", "$0"]
  },
  "from hypothesis.extra.pandas import columns": {
    "prefix": "from hypothesis.extra.pandas import columns",
    "body": ["from hypothesis.extra.pandas import columns", "$0"]
  },
  "from hypothesis.extra.pandas import data_frames": {
    "prefix": "from hypothesis.extra.pandas import data_frames",
    "body": ["from hypothesis.extra.pandas import data_frames", "$0"]
  },
  "from hypothesis.extra.pandas import indexes": {
    "prefix": "from hypothesis.extra.pandas import indexes",
    "body": ["from hypothesis.extra.pandas import indexes", "$0"]
  },
  "from hypothesis.extra.pandas import range_indexes": {
    "prefix": "from hypothesis.extra.pandas import range_indexes",
    "body": ["from hypothesis.extra.pandas import range_indexes", "$0"]
  },
  "from hypothesis.extra.pandas import series": {
    "prefix": "from hypothesis.extra.pandas import series",
    "body": ["from hypothesis.extra.pandas import series", "$0"]
  },

  // third party - ib-insync
  "import ib_insync": {
    "prefix": "import ib_insync",
    "body": ["import ib_insync", "$0"]
  },
  "from ib_insync.util import dataclassAsDict": {
    "prefix": "from ib_insync.util import dataclassAsDict",
    "body": ["from ib_insync.util import dataclassAsDict", "$0"]
  },
  "from ib_insync.util import dataclassAsTuple": {
    "prefix": "from ib_insync.util import dataclassAsTuple",
    "body": ["from ib_insync.util import dataclassAsTuple", "$0"]
  },
  "from ib_insync.util import startLoop": {
    "prefix": "from ib_insync.util import startLoop",
    "body": ["from ib_insync.util import startLoop", "$0"]
  },

  // third party - icecream
  "import icecream": {
    "prefix": "import icecream",
    "body": ["import icecream", "$0"]
  },
  "from icecream import ic": {
    "prefix": "from icecream import ic",
    "body": ["from icecream import ic", "$0"]
  },

  // third party - joblib
  "import joblib": {
    "prefix": "import joblib",
    "body": ["import joblib", "$0"]
  },
  "from joblib import Memory": {
    "prefix": "from joblib import Memory",
    "body": ["from joblib import Memory", "$0"]
  },
  "from joblib import Parallel": {
    "prefix": "from joblib import Parallel",
    "body": ["from joblib import Parallel", "$0"]
  },
  "from joblib import delayed": {
    "prefix": "from joblib import delayed",
    "body": ["from joblib import delayed", "$0"]
  },

  // third party - loguru
  "import loguru": {
    "prefix": "import loguru",
    "body": ["import loguru", "$0"]
  },
  "from loguru import logger": {
    "prefix": "from loguru import logger",
    "body": ["from loguru import logger", "$0"]
  },

  // third party - luigi
  "import luigi": {
    "prefix": "import luigi",
    "body": ["import luigi", "$0"]
  },
  "from luigi import BoolParameter": {
    "prefix": "from luigi import BoolParameter",
    "body": ["from luigi import BoolParameter", "$0"]
  },
  "from luigi import DictParameter": {
    "prefix": "from luigi import DictParameter",
    "body": ["from luigi import DictParameter", "$0"]
  },
  "from luigi import EnumParameter": {
    "prefix": "from luigi import EnumParameter",
    "body": ["from luigi import EnumParameter", "$0"]
  },
  "from luigi import ExternalTask": {
    "prefix": "from luigi import ExternalTask",
    "body": ["from luigi import ExternalTask", "$0"]
  },
  "from luigi import FloatParameter": {
    "prefix": "from luigi import FloatParameter",
    "body": ["from luigi import FloatParameter", "$0"]
  },
  "from luigi import IntParameter": {
    "prefix": "from luigi import IntParameter",
    "body": ["from luigi import IntParameter", "$0"]
  },
  "from luigi import LocalTarget": {
    "prefix": "from luigi import LocalTarget",
    "body": ["from luigi import LocalTarget", "$0"]
  },
  "from luigi import Task": {
    "prefix": "from luigi import Task",
    "body": ["from luigi import Task", "$0"]
  },
  "from luigi import TaskParameter": {
    "prefix": "from luigi import TaskParameter",
    "body": ["from luigi import TaskParameter", "$0"]
  },
  "from luigi import TupleParameter": {
    "prefix": "from luigi import TupleParameter",
    "body": ["from luigi import TupleParameter", "$0"]
  },
  "from luigi import WrapperTask": {
    "prefix": "from luigi import WrapperTask",
    "body": ["from luigi import WrapperTask", "$0"]
  },
  "from luigi import build": {
    "prefix": "from luigi import build",
    "body": ["from luigi import build", "$0"]
  },

  // third party - matplotlib
  "import matplotlib": {
    "prefix": "import matplotlib",
    "body": ["import matplotlib", "$0"]
  },
  "import matplotlib as mpl": {
    "prefix": "import matplotlib as mpl",
    "body": ["import matplotlib as mpl", "$0"]
  },
  "import matplotlib as plt": {
    "prefix": "import matplotlib as plt",
    "body": ["import matplotlib as plt", "$0"]
  },

  // third party - more-itertools
  "import more_itertools": {
    "prefix": "import more_itertools",
    "body": ["import more_itertools", "$0"]
  },
  "from more_itertools import all_equal": {
    "prefix": "from more_itertools import all_equal",
    "body": ["from more_itertools import all_equal", "$0"]
  },
  "from more_itertools import always_iterable": {
    "prefix": "from more_itertools import always_iterable",
    "body": ["from more_itertools import always_iterable", "$0"]
  },
  "from more_itertools import chunked": {
    "prefix": "from more_itertools import chunked",
    "body": ["from more_itertools import chunked", "$0"]
  },
  "from more_itertools import consume": {
    "prefix": "from more_itertools import consume",
    "body": ["from more_itertools import consume", "$0"]
  },
  "from more_itertools import distribute": {
    "prefix": "from more_itertools import distribute",
    "body": ["from more_itertools import distribute", "$0"]
  },
  "from more_itertools import divide": {
    "prefix": "from more_itertools import divide",
    "body": ["from more_itertools import divide", "$0"]
  },
  "from more_itertools import dotproduct": {
    "prefix": "from more_itertools import dotproduct",
    "body": ["from more_itertools import dotproduct", "$0"]
  },
  "from more_itertools import filter_except": {
    "prefix": "from more_itertools import filter_except",
    "body": ["from more_itertools import filter_except", "$0"]
  },
  "from more_itertools import first": {
    "prefix": "from more_itertools import first",
    "body": ["from more_itertools import first", "$0"]
  },
  "from more_itertools import first_true": {
    "prefix": "from more_itertools import first_true",
    "body": ["from more_itertools import first_true", "$0"]
  },
  "from more_itertools import flatten": {
    "prefix": "from more_itertools import flatten",
    "body": ["from more_itertools import flatten", "$0"]
  },
  "from more_itertools import grouper": {
    "prefix": "from more_itertools import grouper",
    "body": ["from more_itertools import grouper", "$0"]
  },
  "from more_itertools import interleave": {
    "prefix": "from more_itertools import interleave",
    "body": ["from more_itertools import interleave", "$0"]
  },
  "from more_itertools import interleave_longest": {
    "prefix": "from more_itertools import interleave_longest",
    "body": ["from more_itertools import interleave_longest", "$0"]
  },
  "from more_itertools import intersperse": {
    "prefix": "from more_itertools import intersperse",
    "body": ["from more_itertools import intersperse", "$0"]
  },
  "from more_itertools import iter_except": {
    "prefix": "from more_itertools import iter_except",
    "body": ["from more_itertools import iter_except", "$0"]
  },
  "from more_itertools import iterate": {
    "prefix": "from more_itertools import iterate",
    "body": ["from more_itertools import iterate", "$0"]
  },
  "from more_itertools import last": {
    "prefix": "from more_itertools import last",
    "body": ["from more_itertools import last", "$0"]
  },
  "from more_itertools import lstrip": {
    "prefix": "from more_itertools import lstrip",
    "body": ["from more_itertools import lstrip", "$0"]
  },
  "from more_itertools import map_except": {
    "prefix": "from more_itertools import map_except",
    "body": ["from more_itertools import map_except", "$0"]
  },
  "from more_itertools import ncycles": {
    "prefix": "from more_itertools import ncycles",
    "body": ["from more_itertools import ncycles", "$0"]
  },
  "from more_itertools import nth": {
    "prefix": "from more_itertools import nth",
    "body": ["from more_itertools import nth", "$0"]
  },
  "from more_itertools import nth_combination": {
    "prefix": "from more_itertools import nth_combination",
    "body": ["from more_itertools import nth_combination", "$0"]
  },
  "from more_itertools import nth_or_last": {
    "prefix": "from more_itertools import nth_or_last",
    "body": ["from more_itertools import nth_or_last", "$0"]
  },
  "from more_itertools import one": {
    "prefix": "from more_itertools import one",
    "body": ["from more_itertools import one", "$0"]
  },
  "from more_itertools import only": {
    "prefix": "from more_itertools import only",
    "body": ["from more_itertools import only", "$0"]
  },
  "from more_itertools import padnone": {
    "prefix": "from more_itertools import padnone",
    "body": ["from more_itertools import padnone", "$0"]
  },
  "from more_itertools import pairwise": {
    "prefix": "from more_itertools import pairwise",
    "body": ["from more_itertools import pairwise", "$0"]
  },
  "from more_itertools import partition": {
    "prefix": "from more_itertools import partition",
    "body": ["from more_itertools import partition", "$0"]
  },
  "from more_itertools import powerset": {
    "prefix": "from more_itertools import powerset",
    "body": ["from more_itertools import powerset", "$0"]
  },
  "from more_itertools import prepend": {
    "prefix": "from more_itertools import prepend",
    "body": ["from more_itertools import prepend", "$0"]
  },
  "from more_itertools import quantify": {
    "prefix": "from more_itertools import quantify",
    "body": ["from more_itertools import quantify", "$0"]
  },
  "from more_itertools import random_combination": {
    "prefix": "from more_itertools import random_combination",
    "body": ["from more_itertools import random_combination", "$0"]
  },
  "from more_itertools import random_permutation": {
    "prefix": "from more_itertools import random_permutation",
    "body": ["from more_itertools import random_permutation", "$0"]
  },
  "from more_itertools import random_product": {
    "prefix": "from more_itertools import random_product",
    "body": ["from more_itertools import random_product", "$0"]
  },
  "from more_itertools import repeatfunc": {
    "prefix": "from more_itertools import repeatfunc",
    "body": ["from more_itertools import repeatfunc", "$0"]
  },
  "from more_itertools import roundrobin": {
    "prefix": "from more_itertools import roundrobin",
    "body": ["from more_itertools import roundrobin", "$0"]
  },
  "from more_itertools import rstrip": {
    "prefix": "from more_itertools import rstrip",
    "body": ["from more_itertools import rstrip", "$0"]
  },
  "from more_itertools import split_after": {
    "prefix": "from more_itertools import split_after",
    "body": ["from more_itertools import split_after", "$0"]
  },
  "from more_itertools import split_at": {
    "prefix": "from more_itertools import split_at",
    "body": ["from more_itertools import split_at", "$0"]
  },
  "from more_itertools import split_before": {
    "prefix": "from more_itertools import split_before",
    "body": ["from more_itertools import split_before", "$0"]
  },
  "from more_itertools import split_into": {
    "prefix": "from more_itertools import split_into",
    "body": ["from more_itertools import split_into", "$0"]
  },
  "from more_itertools import split_when": {
    "prefix": "from more_itertools import split_when",
    "body": ["from more_itertools import split_when", "$0"]
  },
  "from more_itertools import strip": {
    "prefix": "from more_itertools import strip",
    "body": ["from more_itertools import strip", "$0"]
  },
  "from more_itertools import tabulate": {
    "prefix": "from more_itertools import tabulate",
    "body": ["from more_itertools import tabulate", "$0"]
  },
  "from more_itertools import tail": {
    "prefix": "from more_itertools import tail",
    "body": ["from more_itertools import tail", "$0"]
  },
  "from more_itertools import take": {
    "prefix": "from more_itertools import take",
    "body": ["from more_itertools import take", "$0"]
  },
  "from more_itertools import unique_everseen": {
    "prefix": "from more_itertools import unique_everseen",
    "body": ["from more_itertools import unique_everseen", "$0"]
  },
  "from more_itertools import unique_justseen": {
    "prefix": "from more_itertools import unique_justseen",
    "body": ["from more_itertools import unique_justseen", "$0"]
  },
  "from more_itertools import unzip": {
    "prefix": "from more_itertools import unzip",
    "body": ["from more_itertools import unzip", "$0"]
  },
  "from more_itertools import windowed": {
    "prefix": "from more_itertools import windowed",
    "body": ["from more_itertools import windowed", "$0"]
  },
  "from more_itertools import zip_equal": {
    "prefix": "from more_itertools import zip_equal",
    "body": ["from more_itertools import zip_equal", "$0"]
  },

  // third party - pandas
  "import pandas": {
    "prefix": "import pandas",
    "body": ["import pandas", "$0"]
  },
  "import pandas as pd": {
    "prefix": "import pandas as pd",
    "body": ["import pandas as pd", "$0"]
  },
  "from pandas import BooleanDtype": {
    "prefix": "from pandas import BooleanDtype",
    "body": ["from pandas import BooleanDtype", "$0"]
  },
  "from pandas import DataFrame": {
    "prefix": "from pandas import DataFrame",
    "body": ["from pandas import DataFrame", "$0"]
  },
  "from pandas import DateOffset": {
    "prefix": "from pandas import DateOffset",
    "body": ["from pandas import DateOffset", "$0"]
  },
  "from pandas import DatetimeIndex": {
    "prefix": "from pandas import DatetimeIndex",
    "body": ["from pandas import DatetimeIndex", "$0"]
  },
  "from pandas import Index": {
    "prefix": "from pandas import Index",
    "body": ["from pandas import Index", "$0"]
  },
  "from pandas import Int64Dtype": {
    "prefix": "from pandas import Int64Dtype",
    "body": ["from pandas import Int64Dtype", "$0"]
  },
  "from pandas import MultiIndex": {
    "prefix": "from pandas import MultiIndex",
    "body": ["from pandas import MultiIndex", "$0"]
  },
  "from pandas import RangeIndex": {
    "prefix": "from pandas import RangeIndex",
    "body": ["from pandas import RangeIndex", "$0"]
  },
  "from pandas import Series": {
    "prefix": "from pandas import Series",
    "body": ["from pandas import Series", "$0"]
  },
  "from pandas import StringDtype": {
    "prefix": "from pandas import StringDtype",
    "body": ["from pandas import StringDtype", "$0"]
  },
  "from pandas import Timedelta": {
    "prefix": "from pandas import Timedelta",
    "body": ["from pandas import Timedelta", "$0"]
  },
  "from pandas import TimedeltaIndex": {
    "prefix": "from pandas import TimedeltaIndex",
    "body": ["from pandas import TimedeltaIndex", "$0"]
  },
  "from pandas import Timestamp": {
    "prefix": "from pandas import Timestamp",
    "body": ["from pandas import Timestamp", "$0"]
  },
  "from pandas import bdate_range": {
    "prefix": "from pandas import bdate_range",
    "body": ["from pandas import bdate_range", "$0"]
  },
  "from pandas import concat": {
    "prefix": "from pandas import concat",
    "body": ["from pandas import concat", "$0"]
  },
  "from pandas import date_range": {
    "prefix": "from pandas import date_range",
    "body": ["from pandas import date_range", "$0"]
  },
  "from pandas import option_context": {
    "prefix": "from pandas import option_context",
    "body": ["from pandas import option_context", "$0"]
  },
  "from pandas import qcut": {
    "prefix": "from pandas import qcut",
    "body": ["from pandas import qcut", "$0"]
  },
  "from pandas import read_parquet": {
    "prefix": "from pandas import read_parquet",
    "body": ["from pandas import read_parquet", "$0"]
  },
  "from pandas import read_pickle": {
    "prefix": "from pandas import read_pickle",
    "body": ["from pandas import read_pickle", "$0"]
  },
  "from pandas import read_sql": {
    "prefix": "from pandas import read_sql",
    "body": ["from pandas import read_sql", "$0"]
  },
  "from pandas import read_table": {
    "prefix": "from pandas import read_table",
    "body": ["from pandas import read_table", "$0"]
  },
  "from pandas import set_option": {
    "prefix": "from pandas import set_option",
    "body": ["from pandas import set_option", "$0"]
  },
  "from pandas import to_datetime": {
    "prefix": "from pandas import to_datetime",
    "body": ["from pandas import to_datetime", "$0"]
  },
  "from pandas import to_pickle": {
    "prefix": "from pandas import to_pickle",
    "body": ["from pandas import to_pickle", "$0"]
  },
  "from pandas.testing import assert_frame_equal": {
    "prefix": "from pandas.testing import assert_frame_equal",
    "body": ["from pandas.testing import assert_frame_equal", "$0"]
  },
  "from pandas.testing import assert_index_equal": {
    "prefix": "from pandas.testing import assert_index_equal",
    "body": ["from pandas.testing import assert_index_equal", "$0"]
  },
  "from pandas.testing import assert_series_equal": {
    "prefix": "from pandas.testing import assert_series_equal",
    "body": ["from pandas.testing import assert_series_equal", "$0"]
  },
  "from pandas.tseries.offsets import BDay": {
    "prefix": "from pandas.tseries.offsets import BDay",
    "body": ["from pandas.tseries.offsets import BDay", "$0"]
  },
  "from pandas.tseries.offsets import Hour": {
    "prefix": "from pandas.tseries.offsets import Hour",
    "body": ["from pandas.tseries.offsets import Hour", "$0"]
  },
  "from pandas.tseries.offsets import Micro": {
    "prefix": "from pandas.tseries.offsets import Micro",
    "body": ["from pandas.tseries.offsets import Micro", "$0"]
  },
  "from pandas.tseries.offsets import Milli": {
    "prefix": "from pandas.tseries.offsets import Milli",
    "body": ["from pandas.tseries.offsets import Milli", "$0"]
  },
  "from pandas.tseries.offsets import Minute": {
    "prefix": "from pandas.tseries.offsets import Minute",
    "body": ["from pandas.tseries.offsets import Minute", "$0"]
  },
  "from pandas.tseries.offsets import MonthBegin": {
    "prefix": "from pandas.tseries.offsets import MonthBegin",
    "body": ["from pandas.tseries.offsets import MonthBegin", "$0"]
  },
  "from pandas.tseries.offsets import MonthEnd": {
    "prefix": "from pandas.tseries.offsets import MonthEnd",
    "body": ["from pandas.tseries.offsets import MonthEnd", "$0"]
  },
  "from pandas.tseries.offsets import Nano": {
    "prefix": "from pandas.tseries.offsets import Nano",
    "body": ["from pandas.tseries.offsets import Nano", "$0"]
  },
  "from pandas.tseries.offsets import Second": {
    "prefix": "from pandas.tseries.offsets import Second",
    "body": ["from pandas.tseries.offsets import Second", "$0"]
  },
  "from pandas.tseries.offsets import Week": {
    "prefix": "from pandas.tseries.offsets import Week",
    "body": ["from pandas.tseries.offsets import Week", "$0"]
  },

  // third party - sqlalchemy
  "import sqlalchemy": {
    "prefix": "import sqlalchemy",
    "body": ["import sqlalchemy", "$0"]
  },
  "import sqlalchemy as sqla": {
    "prefix": "import sqlalchemy as sqla",
    "body": ["import sqlalchemy as sqla", "$0"]
  },
  "import sqlalchemy.orm": {
    "prefix": "import sqlalchemy.orm",
    "body": ["import sqlalchemy.orm", "$0"]
  },
  "from sqlalchemy import BigInteger": {
    "prefix": "from sqlalchemy import BigInteger",
    "body": ["from sqlalchemy import BigInteger", "$0"]
  },
  "from sqlalchemy import Boolean": {
    "prefix": "from sqlalchemy import Boolean",
    "body": ["from sqlalchemy import Boolean", "$0"]
  },
  "from sqlalchemy import Column": {
    "prefix": "from sqlalchemy import Column",
    "body": ["from sqlalchemy import Column", "$0"]
  },
  "from sqlalchemy import DateTime": {
    "prefix": "from sqlalchemy import DateTime",
    "body": ["from sqlalchemy import DateTime", "$0"]
  },
  "from sqlalchemy import Float": {
    "prefix": "from sqlalchemy import Float",
    "body": ["from sqlalchemy import Float", "$0"]
  },
  "from sqlalchemy import ForeignKey": {
    "prefix": "from sqlalchemy import ForeignKey",
    "body": ["from sqlalchemy import ForeignKey", "$0"]
  },
  "from sqlalchemy import Integer": {
    "prefix": "from sqlalchemy import Integer",
    "body": ["from sqlalchemy import Integer", "$0"]
  },
  "from sqlalchemy import MetaData": {
    "prefix": "from sqlalchemy import MetaData",
    "body": ["from sqlalchemy import MetaData", "$0"]
  },
  "from sqlalchemy import SmallInteger": {
    "prefix": "from sqlalchemy import SmallInteger",
    "body": ["from sqlalchemy import SmallInteger", "$0"]
  },
  "from sqlalchemy import String": {
    "prefix": "from sqlalchemy import String",
    "body": ["from sqlalchemy import String", "$0"]
  },
  "from sqlalchemy import Table": {
    "prefix": "from sqlalchemy import Table",
    "body": ["from sqlalchemy import Table", "$0"]
  },
  "from sqlalchemy import Unicode": {
    "prefix": "from sqlalchemy import Unicode",
    "body": ["from sqlalchemy import Unicode", "$0"]
  },
  "from sqlalchemy import create_engine": {
    "prefix": "from sqlalchemy import create_engine",
    "body": ["from sqlalchemy import create_engine", "$0"]
  },
  "from sqlalchemy import select": {
    "prefix": "from sqlalchemy import select",
    "body": ["from sqlalchemy import select", "$0"]
  },
  "from sqlalchemy.engine import Engine": {
    "prefix": "from sqlalchemy.engine import Engine",
    "body": ["from sqlalchemy.engine import Engine", "$0"]
  },
  "from sqlalchemy.orm import Session": {
    "prefix": "from sqlalchemy.orm import Session",
    "body": ["from sqlalchemy.orm import Session"]
  },
  "from sqlalchemy.orm import declarative_base": {
    "prefix": "from sqlalchemy.orm import declarative_base",
    "body": ["from sqlalchemy.orm import declarative_base", "$0"]
  },
  "from sqlalchemy.orm import relationship": {
    "prefix": "from sqlalchemy.orm import relationship",
    "body": ["from sqlalchemy.orm import relationship", "$0"]
  },
  "from sqlalchemy.orm import sessionmaker": {
    "prefix": "from sqlalchemy.orm import sessionmaker",
    "body": ["from sqlalchemy.orm import sessionmaker", "$0"]
  },

  // third party - typing-extensions

  "from typing_extensions import Self": {
    "prefix": "from typing_extensions import Self",
    "body": ["from typing_extensions import Self", "$0"]
  },
  "from typing_extensions import override": {
    "prefix": "from typing_extensions import override",
    "body": ["from typing_extensions import override", "$0"]
  }
}
