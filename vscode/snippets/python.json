// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
// same ids are connected.
// Example:
// "Print to console": {
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }
{
  // standard library - abc
  "iaabc": {
    "prefix": "iaabc",
    "body": ["from abc import ABC", "$0"],
    "description": "from abc import ABC"
  },
  "iaabcmeta": {
    "prefix": "iaabcmeta",
    "body": ["from abc import ABCMeta", "$0"],
    "description": "from abc import ABCMeta"
  },
  "iaabstractmethod": {
    "prefix": "iaabstractmethod",
    "body": ["from abc import abstractmethod", "$0"],
    "description": "from abc import abstractmethod"
  },

  // standard library - argparse
  "iaargumentparse": {
    "prefix": "iaargumentparse",
    "body": ["from argparse import ArgumentParser", "$0"],
    "description": "from argparse import ArgumentParser"
  },

  // standard library - collections
  "iccounter": {
    "prefix": "iccounter",
    "body": ["from collections import Counter", "$0"],
    "description": "from collections import Counter"
  },
  "icdefaultdict": {
    "prefix": "icdefaultdict",
    "body": ["from collections import defaultdict", "$0"],
    "description": "from collections import defaultdict"
  },
  "icdeque": {
    "prefix": "icdeque",
    "body": ["from collections import deque", "$0"],
    "description": "from collections import deque"
  },
  "icaawaitable": {
    "prefix": "icaawaitable",
    "body": ["from collections.abc import Awaitable", "$0"],
    "description": "from collections.abc import Awaitable"
  },
  "icacallable": {
    "prefix": "icacallable",
    "body": ["from collections.abc import Callable", "$0"],
    "description": "from collections.abc import Callable"
  },
  "icahashable": {
    "prefix": "icahashable",
    "body": ["from collections.abc import Hashable", "$0"],
    "description": "from collections.abc import Hashable"
  },
  "icaiterable": {
    "prefix": "icaiterable",
    "body": ["from collections.abc import Iterable", "$0"],
    "description": "from collections.abc import Iterable"
  },
  "icaiterator": {
    "prefix": "icaiterator",
    "body": ["from collections.abc import Iterator", "$0"],
    "description": "from collections.abc import Iterator"
  },

  "icamapping": {
    "prefix": "icamapping",
    "body": ["from collections.abc import Mapping", "$0"],
    "description": "from collections.abc import Mapping"
  },
  "icasized": {
    "prefix": "icasized",
    "body": ["from collections.abc import Sized", "$0"],
    "description": "from collections.abc import Sized"
  },

  // standard library - datetime
  "idatetime": {
    "prefix": "idatetime",
    "body": ["import datetime as dt", "$0"],
    "description": "import datetime as dt"
  },

  // standard library - future
  "ifannotations": {
    "prefix": "ifannotations",
    "body": ["from __future__ import annotations", "$0"],
    "description": "from __future__ import annotations"
  },

  // standard library - typing
  "ititerable": {
    "prefix": "ititerable",
    "body": ["from typing import Iterable", "$0"],
    "description": "from typing import Iterable"
  },
  "ititerator": {
    "prefix": "ititerator",
    "body": ["from typing import Iterator", "$0"],
    "description": "from typing import Iterator"
  },
  "ittypechecking": {
    "prefix": "ittypechecking",
    "body": ["from typing import TYPE_CHECKING", "$0"],
    "description": "from typing import TYPE_CHECKING"
  },

  // third party - attrs
  "iaasdict": {
    "prefix": "iaasdict",
    "body": ["from attrs import asdict", "$0"],
    "description": "from attrs import asdict"
  },
  "iaastuple": {
    "prefix": "iaastuple",
    "body": ["from attrs import astuple", "$0"],
    "description": "from attrs import astuple"
  },
  "iadefine": {
    "prefix": "iadefine",
    "body": ["from attrs import define", "$0"],
    "description": "from attrs import define"
  },
  "iaevolve": {
    "prefix": "iaevolve",
    "body": ["from attrs import evolve", "$0"],
    "description": "from attrs import evolve"
  },
  "iafield": {
    "prefix": "iafield",
    "body": ["from attrs import field", "$0"],
    "description": "from attrs import field"
  },
  "iafields": {
    "prefix": "iafields",
    "body": ["froma attrs import field", "$0"],
    "description": "from attrs import fields"
  },

  // third party - beartype
  "ibbeartype": {
    "prefix": "ibbeartype",
    "body": ["from beartype import beartype", "$0"],
    "description": "from beartype import beartype"
  },
  "ibddieifunbearable": {
    "prefix": "ibddieifunbearable",
    "body": ["from beartype.door import die_if_unbearable", "$0"],
    "description": "from beartype.door import die_if_unbearable"
  },
  "ibvis": {
    "prefix": "ibvis",
    "body": ["from beartype.value import Is", "$0"],
    "description": "from beartype.vale import Is"
  },
  "ibvisattr": {
    "prefix": "ibvisattr",
    "body": ["from beartype.value import IsAttr", "$0"],
    "description": "from beartype.vale import IsAttr"
  },

  // third party - bidict
  "ibbidict": {
    "prefix": "ibbidict",
    "body": ["from bidict import bidict", "$0"],
    "description": "from bidict import bidict"
  },

  // third party - box
  "ibbox": {
    "prefix": "ibbox",
    "body": ["from box imoprt Box", "$0"],
    "description": "from box imoprt Box"
  },

  // third party - bs4
  "ibbeautifulsoup": {
    "prefix": "ibbeautifulsoup",
    "body": ["from bs4 import BeautifulSoup", "$0"],
    "description": "from bs4 import BeautifulSoup"
  },

  // third party - pandas
  "ippd": {
    "prefix": "ippd",
    "body": ["import pandas as pd", "$0"],
    "description": "import pandas"
  },
  "iptimedelta": {
    "prefix": "iptimedelta",
    "body": ["from pandas import Timedelta", "$0"],
    "description": "from pandas import Timedelta"
  },
  "iptimestamp": {
    "prefix": "iptimestamp",
    "body": ["from pandas import Timestamp", "$0"],
    "description": "from pandas import Timestamp"
  },

  // third party - sqlalchemy
  "ismetadata": {
    "prefix": "ismetadata",
    "body": ["from sqlalchemy import MetaData", "$0"],
    "description": "from sqlalchemy import MetaData"
  },
  "istable": {
    "prefix": "istable",
    "body": ["from sqlalchemy import Table", "$0"],
    "description": "from sqlalchemy import Table"
  },
  "iscreateengine": {
    "prefix": "iscreateengine",
    "body": ["from sqlalchemy import create_engine", "$0"],
    "description": "from sqlalchemy import create_engine"
  },

  // third party - typing-extensions
  "iteself": {
    "prefix": "iteself",
    "body": ["from typing_extensions import Self", "$0"],
    "description": "from typing_extensions import Self"
  },
  "iteoverride": {
    "prefix": "iteoverride",
    "body": ["from typing_extensions import override", "$0"],
    "description": "from typing_extensions import override"
  }
}
